<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Code

selected = 3;

top10 = -1;
c_gold = make_colour_rgb(212, 175, 55);

c_bronze = make_colour_rgb(205, 127, 50);

//leaderboard_result = "null";
leaderboard_req = http_get("http://gmscoreboard.com/handle_score.php?tagid=57972a250726c14695245171973&amp;getscore=10");


for (i = 0; i &lt; 10; i+=1){
  global.top_scores[i] = -1;
  global.top_players[i] = -1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_map_find_value(async_load, "id") == leaderboard_req
   {
   if ds_map_find_value(async_load, "status") == 0
      {
      leaderboard_result = ds_map_find_value(async_load, "result");
      //show_debug_message("JSON results = " + string(leaderboard_result));
      resultMap = json_decode(leaderboard_result);
      status = ds_map_find_value(resultMap, "status");
      if (status == "Success."){
        show_debug_message("Top 10 data Successfully Retrieved");
        for (n = 0; n &lt; 10; n++){
          top_score = ds_map_find_value(resultMap, "s"+string(n+1));
          top_player = ds_map_find_value(resultMap, "p"+string(n+1));
          if (!is_undefined(top_score) &amp;&amp; !is_undefined(top_player)){
            global.top_scores[n] = top_score;
            global.top_players[n] = top_player;
          } 
          show_debug_message("Top"+string(n+1)+" player: "+string(global.top_players[n])+", score: " + string(global.top_scores[n]));
        }
      }
      ds_map_destroy(resultMap);
      show_debug_message("!!!!!!!!!!!!!!!: TOP 10 : ")
      //show_debug_message(string(top10.p1));
      }
   else
      {
      top10 = "null";
      }
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_emulogic20);
draw_set_color(c_white);
draw_text(180, 600, "&gt;&gt; GO BACK")
for (i = 0; i &lt; 11; i += 1){
  row = instance_create(635, 70+(i*65), obj_leaderboard_row);
  if (i == 0){
    row.top = 1;
  }
  else{
    row.number = i;
    if (i == 1){
      row.color = c_gold;
    }
    if (i == 2){
      row.color = c_silver;
    }
    if (i == 3){
      row.color = c_bronze;
    }
    if (global.top_scores[i-1] != -1 &amp;&amp; global.top_players[i-1] != -1){
      row.text_score = global.top_scores[i-1];
      row.text_name = global.top_players[i-1];
    }
  }
}

if (keyboard_check_pressed(vk_enter) || keyboard_check_pressed(vk_space)){
  room_goto(global.leaderboard_previous);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
