<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_front</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player Creation
event_inherited();
phy_fixed_rotation = 1;
image_index=0;
image_speed=0;

spd = 4;
dist = 4;
keys = 0;
udlr_dir = "d"; //direction: up,down,left,right
dir = 90;
slow_factor = 1;
mine_range = 24;
mine_area_x = phy_position_x;
mine_area_y = phy_position_y+mine_range;

build_mode = 0;
upgrade_mode = 0;

instance_create(mine_area_x, mine_area_y, obj_mine_area);

img_spd = 1;

front_sprite = spr_player_front;
back_sprite = spr_player_back;
left_sprite = spr_player_left;
right_sprite = spr_player_right;
stop_image = 1;
scr_get_input();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step Event
scr_get_input();
if (room == room_dungeon &amp;&amp; build_mode == 0){
  scr_combine_key_input();
}
if (room == room_dungeon &amp;&amp; build_mode == 1){
  scr_build_key_input();
}
dist = spd/slow_factor;

if (ru_key){
    sprite_index = back_sprite;
    image_speed = img_spd;
    dir = 315;
    phy_position_x += dist/1.4;
    phy_position_y -= dist/1.4;
}

else if (rd_key){
    sprite_index = front_sprite;
    image_speed = img_spd;
    dir = 45;
    phy_position_x += dist/1.4;
    phy_position_y += dist/1.4;
}
else if (lu_key){
    sprite_index = back_sprite;
    image_speed = img_spd;
    dir = 225;
    phy_position_x -= dist/1.4;
    phy_position_y -= dist/1.4;
}
else if (ld_key){
    sprite_index = front_sprite;
    image_speed = img_spd;
    dir = 135;
    phy_position_x -= dist/1.4;
    phy_position_y += dist/1.4;
}
//Move Left
else if (left_key) {
    sprite_index = left_sprite;
    image_speed = img_spd;
    dir = 180;
    phy_position_x -= dist;
}
//Move Right
else if (right_key) {
    sprite_index = right_sprite;
    image_speed = img_spd;
    dir = 0;
    phy_position_x += dist;
}
//Move Up
else if (up_key) {
    sprite_index = back_sprite ;
    image_speed = img_spd;
    dir = 270;
    phy_position_y -= dist;
}
//Move Down
else if (down_key) {
    sprite_index = front_sprite;
    image_speed = img_spd;
    dir = 90;
    phy_position_y += dist;
}


else{
    if (stop_image == 1){
      image_speed = 0;
      image_index = 0;
    }
}



if (dir &gt;= 45) and (dir &lt;= 135)
{
  udlr_dir = "d"; //down
  mine_area_x = phy_position_x;
  mine_area_y = phy_position_y+mine_range;
}
else if (dir &gt; 135) and (dir &lt; 225)
{
  udlr_dir = "l"; //left
  mine_area_x = phy_position_x-mine_range;
  mine_area_y = phy_position_y;
}
else if (dir &gt;= 225) and (dir &lt;= 315)
{
  udlr_dir = "u"; //up
  mine_area_x = phy_position_x;
  mine_area_y = phy_position_y-mine_range;
}
else
{
  udlr_dir = "r"; //right
  mine_area_x = phy_position_x+mine_range;
  mine_area_y = phy_position_y;
}

with(obj_mine_area){
  x = obj_player.mine_area_x;
  y = obj_player.mine_area_y;
}

if (space_key){
    with(obj_mine_area){
      if(place_meeting(x, y, obj_ele_parent)){
        with(instance_nearest(x,y, obj_ele_parent)){
          current_hp -= 1;
          timer = 30;
        }
      }
      else if(place_meeting(x, y, obj_tower_parent)){
        with(instance_nearest(x,y,obj_tower_parent)){
          current_hp -= 10;
          hp_gage_timer = 90;
        }
      }
    }
}
if (w_key &amp;&amp; room == room_dungeon){
  if(build_mode == 0){
    build_mode = 1;
    instance_create(phy_position_x, phy_position_y, obj_build_area);
  }
  else{
    build_mode = 0;
    if(instance_exists(obj_build_area)){
      with(obj_build_area)
        instance_destroy();
    }
  }
}

if room == room_world
    view_vborder[0] = min(1536 - phy_position_y, 512)
if room == room_dungeon {
    view_vborder[0] = min(608 - phy_position_y, 512)
    view_hborder[0] = min(992 - phy_position_x, 512)
}
//show_debug_message("x: " + string(phy_position_x));
//show_debug_message("y: " + string(phy_position_y));
//show_debug_message("fire = " + string(global.mat_fire));
//show_debug_message("wind = " + string(global.mat_wind));
//show_debug_message("thunder = " + string(global.mat_thunder));
//show_debug_message("ice = " + string(global.mat_ice));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mat_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide --&gt; Obtain materials
with(other){
  instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ele_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,4</point>
    <point>24,4</point>
    <point>24,32</point>
    <point>8,32</point>
  </PhysicsShapePoints>
</object>
